@using PortfolioWebsite.Client.Services;
@inject PortfolioWebsite.Client.Services.AppState AppState
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />

<MudAppBar Color="MudBlazor.Color.Primary" Fixed="true" Dense="false">
    <MudText Typo="Typo.h6" Class="object-left" Style="mt-auto;" Color="MudBlazor.Color.Default">Zachary Morello</MudText>
    <MudSpacer />
    <MudButtonGroup Class="" Style="" Color="MudBlazor.Color.Default" Variant="MudBlazor.Variant.Outlined">
        <MudButton OnClick="@((e) => AppState.SetCurrentPage(CurrentPage.AboutMe))" Href="/"         Class = "mud-theme-primary"Style="height:45px; max-width:250px;" Variant="MudBlazor.Variant.Text" Disabled = "@aboutMeActive"    >About Me</MudButton>
        <MudButton OnClick="@((e) => AppState.SetCurrentPage(CurrentPage.Projects))" Href="/projects"Class = "mud-theme-primary"Style="height:45px; max-width:250px;" Variant="MudBlazor.Variant.Text" Disabled = "@projectsActive"   >Projects</MudButton>
        <MudButton OnClick="@((e) => AppState.SetCurrentPage(CurrentPage.Contact))" Href="/contact"  Class = "mud-theme-primary"Style="height:45px; max-width:250px;" Variant="MudBlazor.Variant.Text" Disabled="@contactActive"      >Contact</MudButton>
    </MudButtonGroup>
    <MudSpacer />
    <MudSwitch @bind-Checked="@_isDarkMode" Color="MudBlazor.Color.Primary" Class="object-right ml-6" Style="padding-top:5px" T="bool" Label="Toggle Light/Dark Mode" />
</MudAppBar>

@if (underConstruction)
{
    <PortfolioWebsite.Client.Components.ConstructionBanner></PortfolioWebsite.Client.Components.ConstructionBanner>
}

@code {

    private bool underConstruction = true;
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
		{
            AppState.OnChange += StateHasChanged;
        }
    }
    //on page load
    protected override void OnInitialized()
    {
        base.OnInitialized();
        //AppState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }

    private void StateHasChanged()
    {
        switch (AppState.currentPage)
        {
            case CurrentPage.AboutMe:
                aboutMeActive = true;
                projectsActive = false;
                contactActive = false;
                break;
            case CurrentPage.Projects:
                aboutMeActive = false;
                projectsActive = true;
                contactActive = false;
                break;
            case CurrentPage.Contact:
                aboutMeActive = false;
                projectsActive = false;
                contactActive = true;
                break;
        }
    }

    bool aboutMeActive = true;
    bool projectsActive = false;
    bool contactActive = false;

    bool sidebarExpanded = true;
    private MudTheme _theme = new();
    private bool _isDarkMode = true;
}